{"remainingRequest":"/Users/ericaaron/Developer/Git/rocket/node_modules/thread-loader/dist/cjs.js!/Users/ericaaron/Developer/Git/rocket/node_modules/babel-loader/lib/index.js!/Users/ericaaron/Developer/Git/rocket/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ericaaron/Developer/Git/rocket/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ericaaron/Developer/Git/rocket/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ericaaron/Developer/Git/rocket/src/views/Settings.vue?vue&type=template&id=e2716b48&scoped=true&bindings={\"choice\":\"data\",\"More\":\"options\"}","dependencies":[{"path":"/Users/ericaaron/Developer/Git/rocket/src/views/Settings.vue","mtime":1606833830611},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/cache-loader/dist/cjs.js","mtime":1607000332820},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/thread-loader/dist/cjs.js","mtime":1607000342328},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/babel-loader/lib/index.js","mtime":1607000331810},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1607000343240},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/cache-loader/dist/cjs.js","mtime":1607000332820},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/vue-loader-v16/dist/index.js","mtime":1607000343235}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}