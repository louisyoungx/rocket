{"remainingRequest":"/Users/ericaaron/Developer/Git/rocket/node_modules/babel-loader/lib/index.js!/Users/ericaaron/Developer/Git/rocket/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ericaaron/Developer/Git/rocket/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ericaaron/Developer/Git/rocket/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ericaaron/Developer/Git/rocket/src/views/Gate/GateReports.vue?vue&type=template&id=52a0f34a&scoped=true&bindings={}","dependencies":[{"path":"/Users/ericaaron/Developer/Git/rocket/src/views/Gate/GateReports.vue","mtime":1604808043846},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericaaron/Developer/Git/rocket/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoSWQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCJkYXRhLXYtNTJhMGYzNGEiKTsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LTUyYTBmMzRhIik7Cgp2YXIgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImFydGljbGUiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDMiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIk1vZHVsYXIgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInNwYW4iLCB7CiAgImNsYXNzIjogImJhZGdlIG5ldyIKfSwgIuaWsCIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImRpdiIsIHsKICAiY2xhc3MiOiAibGFiZWxlZC1jaGFydC1jb250YWluZXIiCn0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgImNsYXNzIjogImNhbnZhcy1ob2xkZXIiCn0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJjYW52YXMiLCB7CiAgaWQ6ICJNRCIsCiAgd2lkdGg6ICI0ODIiLAogIGhlaWdodDogIjQ4MiIsCiAgc3R5bGU6IHsKICAgICJ3aWR0aCI6ICIyNDFweCIsCiAgICAiaGVpZ2h0IjogIjI0MXB4IgogIH0KfSldKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidWwiLCB7CiAgImNsYXNzIjogImRvdWdobnV0LWxlZ2VuZCIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImxpIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInNwYW4iLCB7CiAgc3R5bGU6IHsKICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiM1QjkwQkYiCiAgfQp9KSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIkNvcmUiKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJsaSIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJzcGFuIiwgewogIHN0eWxlOiB7CiAgICAiYmFja2dyb3VuZC1jb2xvciI6ICIjOTZiNWI0IgogIH0KfSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJCYXIiKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJsaSIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJzcGFuIiwgewogIHN0eWxlOiB7CiAgICAiYmFja2dyb3VuZC1jb2xvciI6ICIjYTNiZThjIgogIH0KfSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJEb3VnaG51dCIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImxpIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInNwYW4iLCB7CiAgc3R5bGU6IHsKICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiNhYjc5NjciCiAgfQp9KSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIlJhZGFyIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgibGkiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3BhbiIsIHsKICBzdHlsZTogewogICAgImJhY2tncm91bmQtY29sb3IiOiAiI2QwODc3MCIKICB9Cn0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiTGluZSIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImxpIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInNwYW4iLCB7CiAgc3R5bGU6IHsKICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiNiNDhlYWQiCiAgfQp9KSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIlBvbGFyIEFyZWEiKV0pXSldKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiY2FudmFzIiwgewogICJjbGFzcyI6ICJteS00IGNoYXJ0anMtcmVuZGVyLW1vbml0b3IiLAogIGlkOiAibXlDaGFydCIsCiAgd2lkdGg6ICIxMTE0IiwKICBoZWlnaHQ6ICI0NzAiLAogIHN0eWxlOiB7CiAgICAiZGlzcGxheSI6ICJibG9jayIsCiAgICAiaGVpZ2h0IjogIjIzNXB4IiwKICAgICJ3aWR0aCI6ICI1NTdweCIKICB9Cn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9nYXRlX2Jhc2UgPSBfcmVzb2x2ZUNvbXBvbmVudCgiZ2F0ZS1iYXNlIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2dhdGVfYmFzZSwgbnVsbCwgewogICAgImRlZmF1bHQiOiBfd2l0aElkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfaG9pc3RlZF8xLCBfaG9pc3RlZF8yXTsKICAgIH0pLAogICAgXzogMQogIH0pOwp9KTs="},{"version":3,"sources":["/Users/ericaaron/Developer/Git/rocket/src/views/Gate/GateReports.vue"],"names":[],"mappings":";;;;;;8BAEQ,YAAA,CAQU,SARV,EAQU,IARV,EAQU,C,aAPN,YAAA,CAAiD,IAAjD,EAAiD,IAAjD,EAAiD,C,8BAA7C,U,CAA6C,E,aAArC,YAAA,CAAgC,MAAhC,EAAgC;AAA1B,WAAM;AAAoB,CAAhC,EAAwB,GAAxB,CAAqC,CAAjD,CAOM,E,aANN,YAAA,CAKuZ,KALvZ,EAKuZ;AALlZ,WAAM;AAK4Y,CALvZ,EAAoC,C,aAChC,YAAA,CAGM,KAHN,EAGM;AAHD,WAAM;AAGL,CAHN,EAA0B,C,aACtB,YAAA,CACS,QADT,EACS;AADD,EAAA,EAAE,EAAC,IACF;AADO,EAAA,KAAK,EAAC,KACb;AADmB,EAAA,MAAM,EAAC,KAC1B;AADgC,EAAA,KAAoC,EAApC;AAAA,aAAA,OAAA;AAAA,cAAA;AAAA;AAChC,CADT,CADsB,CAA1B,CADgC,E,aAKhC,YAAA,CAA6Y,IAA7Y,EAA6Y;AAAzY,WAAM;AAAmY,CAA7Y,EAA2B,C,aAAC,YAAA,CAA2D,IAA3D,EAA2D,IAA3D,EAA2D,C,aAAvD,YAAA,CAA8C,MAA9C,EAA8C;AAAxC,EAAA,KAAgC,EAAhC;AAAA,wBAAA;AAAA;AAAwC,CAA9C,CAAuD,E,8BAAT,M,CAAS,CAA3D,CAAD,E,aAA4D,YAAA,CAA0D,IAA1D,EAA0D,IAA1D,EAA0D,C,aAAtD,YAAA,CAA8C,MAA9C,EAA8C;AAAxC,EAAA,KAAgC,EAAhC;AAAA,wBAAA;AAAA;AAAwC,CAA9C,CAAsD,E,8BAAR,K,CAAQ,CAA1D,CAA5D,E,aAAsH,YAAA,CAA+D,IAA/D,EAA+D,IAA/D,EAA+D,C,aAA3D,YAAA,CAA8C,MAA9C,EAA8C;AAAxC,EAAA,KAAgC,EAAhC;AAAA,wBAAA;AAAA;AAAwC,CAA9C,CAA2D,E,8BAAb,U,CAAa,CAA/D,CAAtH,E,aAAqL,YAAA,CAA4D,IAA5D,EAA4D,IAA5D,EAA4D,C,aAAxD,YAAA,CAA8C,MAA9C,EAA8C;AAAxC,EAAA,KAAgC,EAAhC;AAAA,wBAAA;AAAA;AAAwC,CAA9C,CAAwD,E,8BAAV,O,CAAU,CAA5D,CAArL,E,aAAiP,YAAA,CAA2D,IAA3D,EAA2D,IAA3D,EAA2D,C,aAAvD,YAAA,CAA8C,MAA9C,EAA8C;AAAxC,EAAA,KAAgC,EAAhC;AAAA,wBAAA;AAAA;AAAwC,CAA9C,CAAuD,E,8BAAT,M,CAAS,CAA3D,CAAjP,E,aAA4S,YAAA,CAAiE,IAAjE,EAAiE,IAAjE,EAAiE,C,aAA7D,YAAA,CAA8C,MAA9C,EAA8C;AAAxC,EAAA,KAAgC,EAAhC;AAAA,wBAAA;AAAA;AAAwC,CAA9C,CAA6D,E,8BAAf,Y,CAAe,CAAjE,CAA5S,CAA3B,CALgC,CAApC,CAMM,CARV,E;;AAAA,C;;8BASA,YAAA,CAAiJ,QAAjJ,EAAiJ;AAAzI,WAAM,6BAAmI;AAArG,EAAA,EAAE,EAAC,SAAkG;AAAxF,EAAA,KAAK,EAAC,MAAkF;AAA3E,EAAA,MAAM,EAAC,KAAoE;AAA9D,EAAA,KAAoD,EAApD;AAAA,eAAA,OAAA;AAAA,cAAA,OAAA;AAAA,aAAA;AAAA;AAA8D,CAAjJ,E,IAAA,E;;AAAA,C;;;;;;;uBAVJ,YAAA,CAWY,oBAXZ,EAWY,IAXZ,EAWY;uBAVR;AAAA,aAQU,CARV,UAQU,EACV,UADU,CARV;AAAA,K,CAUQ;;AAAA,GAXZ,C","sourcesContent":["<template>\n    <gate-base>\n        <article>\n            <h3>Modular <span class=\"badge new\">æ–°</span></h3>\n            <div class=\"labeled-chart-container\">\n                <div class=\"canvas-holder\">\n                    <canvas id=\"MD\" width=\"482\" height=\"482\" style=\"width: 241px; height: 241px;\">\n                    </canvas>\n                </div>\n                <ul class=\"doughnut-legend\"><li><span style=\"background-color:#5B90BF\"></span>Core</li><li><span style=\"background-color:#96b5b4\"></span>Bar</li><li><span style=\"background-color:#a3be8c\"></span>Doughnut</li><li><span style=\"background-color:#ab7967\"></span>Radar</li><li><span style=\"background-color:#d08770\"></span>Line</li><li><span style=\"background-color:#b48ead\"></span>Polar Area</li></ul></div>\n        </article>\n        <canvas class=\"my-4 chartjs-render-monitor\" id=\"myChart\" width=\"1114\" height=\"470\" style=\"display: block; height: 235px; width: 557px;\"></canvas>\n    </gate-base>\n</template>\n\n<script>\n    import chart from 'chart.js'\n    import GateBase from \"./components/GateBase\";\n    export default {\n        name: \"GateReports\",\n        components: {GateBase},\n        mounted() {\n            // Colour variables\n            const red = \"#bf616a\",\n                blue = \"#5B90BF\",\n                orange = \"#d08770\",\n                yellow = \"#ebcb8b\",\n                green = \"#a3be8c\",\n                teal = \"#96b5b4\",\n                pale_blue = \"#8fa1b3\",\n                purple = \"#b48ead\",\n                brown = \"#ab7967\";\n            const moduleData = [\n                {\n                    value: 7.57,\n                    color: colours[\"Core\"],\n                    highlight: Colour(colours[\"Core\"], 10),\n                    label: \"Core\"\n                },\n                {\n                    value: 1.63,\n                    color: colours[\"Bar\"],\n                    highlight: Colour(colours[\"Bar\"], 10),\n                    label: \"Bar\"\n                },\n                {\n                    value: 1.09,\n                    color: colours[\"Doughnut\"],\n                    highlight: Colour(colours[\"Doughnut\"], 10),\n                    label: \"Doughnut\"\n                },\n                {\n                    value: 1.71,\n                    color: colours[\"Radar\"],\n                    highlight: Colour(colours[\"Radar\"], 10),\n                    label: \"Radar\"\n                },\n                {\n                    value: 1.64,\n                    color: colours[\"Line\"],\n                    highlight: Colour(colours[\"Line\"], 10),\n                    label: \"Line\"\n                },\n                {\n                    value: 1.37,\n                    color: colours[\"Polar Area\"],\n                    highlight: Colour(colours[\"Polar Area\"], 10),\n                    label: \"Polar Area\"\n                }\n            ];\n            function Colour(col, amt) {\n\n                var usePound = false;\n\n                if (col[0] == \"#\") {\n                    col = col.slice(1);\n                    usePound = true;\n                }\n\n                var num = parseInt(col,16);\n\n                var r = (num >> 16) + amt;\n\n                if (r > 255) r = 255;\n                else if  (r < 0) r = 0;\n\n                var b = ((num >> 8) & 0x00FF) + amt;\n\n                if (b > 255) b = 255;\n                else if  (b < 0) b = 0;\n\n                var g = (num & 0x0000FF) + amt;\n\n                if (g > 255) g = 255;\n                else if (g < 0) g = 0;\n\n                return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n\n            }\n            const colours = {\n                \"Core\": blue,\n                \"Line\": orange,\n                \"Bar\": teal,\n                \"Polar Area\": purple,\n                \"Radar\": brown,\n                \"Doughnut\": green\n            };\n            const options = {\n                //Boolean - Whether we should show a stroke on each segment\n                segmentShowStroke : true,\n\n                //String - The colour of each segment stroke\n                segmentStrokeColor : \"#fff\",\n\n                //Number - The width of each segment stroke\n                segmentStrokeWidth : 2,\n\n                //Number - The percentage of the chart that we cut out of the middle\n                percentageInnerCutout : 50, // This is 0 for Pie charts\n\n                //Number - Amount of animation steps\n                animationSteps : 100,\n\n                //String - Animation easing effect\n                animationEasing : \"easeOutBounce\",\n\n                //Boolean - Whether we animate the rotation of the Doughnut\n                animateRotate : true,\n\n                //Boolean - Whether we animate scaling the Doughnut from the centre\n                animateScale : false,\n\n                //String - A legend template\n                legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n            }\n\n            const ctx1 = document.getElementById(\"myChart\");\n            const myChart = new Chart(ctx1, {\n                type: 'line',\n                data: {\n                    labels: this.chart_labels,\n                    datasets: [{\n                        data: this.chart_data,\n                        lineTension: 0,\n                        backgroundColor: 'transparent',\n                        borderColor: '#007bff',\n                        borderWidth: 4,\n                        pointBackgroundColor: '#007bff'\n                    }]\n                },\n                options: this.chart_setting_option,\n            });\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":""}]}